function f = drone_dynamics(x, u, k, l)
%DRONE_DYNAMICS
%    F = DRONE_DYNAMICS(K,L,U1,U2,U3,U4,U5,U6,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12)

%    This function was generated by the Symbolic Math Toolbox version 8.4.
%    13-Dec-2020 22:01:34
% t2 = -x(3)
% t3 = -x(4)
% t4 = -x(5)
% t5 = -x(6)
% t6 = t2+x(1)
% t7 = t3+x(2)
% t8 = t4+x(3)
% t9 = t5+x(4)
% t10 = t6.^2
% t11 = t7.^2
% t12 = t8.^2
% t13 = t9.^2
% t14 = t10+t11
% t15 = t12+t13
% t16 = sqrt(t14)
% t17 = sqrt(t15)
% t18 = 1.0./t16
% t19 = 1.0./t17
% t20 = -t16
% t21 = -t17
% t22 = l+t20
% t23 = l+t21
% t24 = k.*t6.*t18.*t22
% t25 = k.*t7.*t18.*t22
% t26 = k.*t8.*t19.*t23
% t27 = k.*t9.*t19.*t23
% f = [x(7);x(8);x(9);x(10);x(11);x(12);t24+u(1);t25+u(2);-t24+t26+u(3);-t25+t27+u(4);-t26+u(5);-t27+u(6)]

f = zeros(12, 1);

f(1) = x(7);
f(2) = x(8);
f(3) = x(9);
f(4) = x(10);
f(5) = x(11);
f(6) = x(12);
dist21 = sqrt((x(1)-x(3))^2 + (x(2)-x(4))^2);
dist12 = sqrt((x(3)-x(1))^2 + (x(4)-x(2))^2);
dist32 = sqrt((x(3)-x(5))^2 + (x(4)-x(6))^2);
dist23 = sqrt((x(5)-x(3))^2 + (x(6)-x(4))^2);
angle21 = atan2(x(2)-x(4), x(1)-x(3));
angle12 = atan2(x(4)-x(2), x(3)-x(1));
angle32 = atan2(x(4)-x(6), x(3)-x(5));
angle23 = atan2(x(6)-x(4), x(5)-x(3));
f(7) = u(1) - k * (dist21 - l) * cos(angle21);
f(8) = u(2) - k * (dist21 - l) * sin(angle21);
f(9) = u(3) - k * (dist12 - l) * cos(angle12) - k * (dist32 - l) * cos(angle32);
f(10) = u(4) - k * (dist12 - l) * sin(angle12) - k * (dist32 - l) * sin(angle32);
f(11) = u(5) - k * (dist23 - l) * cos(angle23);
f(12) = u(6) - k * (dist23 - l) * sin(angle23);